NAME _printf - a custom implementation of the printf function

SYNOPSIS #include <stdarg.h> int _printf(const char *format, ...);

DESCRIPTION The _printf function is a custom implementation of the printf function that takes a format string and a variable number of arguments. The format string is a character string that contains zero or more directives.

The _printf function handles the following conversion specifiers:

    %c: prints a single character
    %s: prints a string of characters
    %d or %i: prints a decimal integer
    %%: prints a percent sign

For any other conversion specifier, the _printf function will print the character literally.

RETURN VALUE The _printf function returns the number of characters printed (excluding the null byte used to end output to strings).

EXAMPLES Here are some examples of how to use the _printf function:

c

#include <stdarg.h>

#include "main.h"


int main(void)

{

    int n = 42;

    char str[] = "hello, world";

    _printf("The value of n is: %d, and the first 7 characters of str are: %s\n", n, str);

    return 0;

}

NOTES The _printf function does not handle the flag characters, field width, precision, or length modifiers.

BUGS There are no known bugs in the _printf function.

AUTHOR Joshua Maldonado

COPYRIGHT Copyright (C) 2023 Your Name. All rights reserved.

LICENSE This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
